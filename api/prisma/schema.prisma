generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(uuid())
  authId    String        @unique
  firstName String?
  lastName  String?
  username  String?
  email     String
  bio       String?
  picture   String
  status    String?
  appMeta   Json?
  active    Boolean       @default(false)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  chats     Participant[]
  messages  Message[]
  admin     Chat[]
}

model Chat {
  id           String        @id @default(uuid())
  name         String?
  picture      String?
  group        Boolean       @default(false)
  owner        String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  participants Participant[]
  messages     Message[]

  admin User @relation(fields: [owner], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Participant {
  userId String
  chatId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([userId, chatId])
}

model Message {
  id         String   @id @default(uuid())
  content    String
  attachment String?
  fileName   String?
  fileSize   Int?
  mimeType   String?
  chatId     String
  senderId   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  chat   Chat @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sender User @relation(fields: [senderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
