version: '3.8'

services:
  database:
    container_name: chatter-database
    image: postgres:15.5-bullseye
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  server:
    container_name: chatter-server
    depends_on:
      database:
        condition: service_healthy
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?schema=public
    restart: unless-stopped
    ports:
      - 5000:${SERVER_PORT}
    environment:
      NODE_ENV: production
      CLOUDINARY_NAME: ${CLOUDINARY_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      SERVER_PORT: ${SERVER_PORT}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?schema=public
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SERVER_PORT}/api/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - backend
      - proxy

  client:
    container_name: chatter-client
    depends_on:
      server:
        condition: service_healthy
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        REACT_APP_AUTH0_DOMAIN: ${REACT_APP_AUTH0_DOMAIN}
        REACT_APP_AUTH0_CLIENT_ID: ${REACT_APP_AUTH0_CLIENT_ID}
        REACT_APP_AUTH0_AUDIENCE: ${REACT_APP_AUTH0_AUDIENCE}
    ports:
      - 3001:3001
    networks:
      - proxy
    restart: unless-stopped
volumes:
  pgdata:
networks:
  proxy:
    external: true
  backend:
    external: false